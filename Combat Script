using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public class CombatScript : MonoBehaviour {

	public Canvas canvasCombatUI;  // this is just the background UI for combat, its pretty empty but should cover the rest of UIs
	public Canvas canvasEndCombat; // for either defeat or victory, just switches the buttons 
	public Canvas canvasOther1; // to deactivate other canvas, we may need more than one
	string textf0; // for summary 
	public Text multitxt0; //for the rest of stuff
	public GameObject Panel1; // disable a panel, just test
	int random; // for cases
	AddItemScript addItemscript = new AddItemScript();


	//BEFORE the combatPhase we need to execute the enemyNPC script that loads the global values!

	public void combatPhase()
	{
		// togles the selected canvases, so if the combat has its own special canvas that gets started while the other gets deactivated



		// turn initialization, COMBAT PHASE
			WorldControl.turnCounter++;

			
			endTurnSummary ();
			//probably the UI hasnt changed, after giving click to attack the canvasCombatSummary just updates. Maybe this canvas is irrelevant and we only need 1
			// This function needs to add the texts
			



	}

/// <summary>
	/// The nexts are asignated to buttons to the new menu
	/// charAttack == calculates the dmg your char does with his basic attack, enemyAttack == calculates the dmg your enemy does, flee calculates your chances to scape
	/// Every other action has its own function, that means every skill has its own
/// </summary>

	//PLAYER TURN 
	//Basic attack
	public void charAttack()
	{
		// float dmg (charProwess modifier + wep modifier) * (1 - enemyDefence +- type efficiency +- random) * 2 random critical chance maybe?. 
		//NOTE: Basic attack has no type/its normal type
		// the stats will be taken from an ID of the weapon  

		// these codes are not working, should be adjusted and probably have to run thro cases 
		//WorldControl.enemyHP = WorldControl.enemyHP - WorldControl.enemyDmgTaken; 
		WorldControl.enemyHP = WorldControl.enemyHP - 20; 
		WorldControl.enemyDmgTaken = 20; 
		if (WorldControl.enemyLust < 100 && WorldControl.enemyHP > 0) {
			enemyAttack ();
		} 
		combatPhase ();
	}



	// it will have the name of the skills tho. Since the skills are dynamic they update by ID too
	public void skill1()
	{
		//MATHS TO BE ADDED, it should take enemy type vs your atack type

		WorldControl.enemyHP = WorldControl.enemyHP - 40; 
		WorldControl.enemyDmgTaken = 40; 

		if(WorldControl.enemyLust < 100 && WorldControl.enemyHP > 0)
		{

			enemyAttack ();
		}
		combatPhase ();
	}


	public void skill2()
	{
		//MATHS TO BE ADDED, it should take enemy type vs your atack type
		WorldControl.enemyLust = WorldControl.enemyLust + 40; 
		WorldControl.enemyLustTaken = 40; 
		if(WorldControl.enemyLust < 100 && WorldControl.enemyHP > 0)
		{
			enemyAttack ();
		}
		combatPhase ();
	}




	public void flee()
	{
		//Try to scapes, calculate in bases of something (most likely prowess + int vs enemy power or something

		random = Random.Range (0, 2); 
		if (random == 0) {
			multitxt0.text = "You escape!"; 
			WorldControl.turnCounter = 0; 
		} else {
			multitxt0.text = "You failed escape!"; // maybe it should be in a special string array thats called after you fail instead of generic text, to add flavor
			enemyAttack ();
			combatPhase ();
		}


	}



	public void submit()
	{
		GameControl.ActualHealth = 0;  
		//You lose automatically
	}

	//ENEMY TURN every attak he has has its own code and stat, they are selected by a switch at random. MOST LIKELY this will be in a different script
	//IT chooses a random attack between 4
	public void enemyAttack()
	{
		/// here it should load at random 4 attacks using either ifs or cases 
	
		GameControl.ActualHealth = GameControl.ActualHealth - 10;  
		WorldControl.enemyDmgInflicted = 10; 
		// enemy attack its somewhat like (his attack power * your type modifier) * (your defense). MATH TO BE DONE 
	}


	// TURN ENDING
	//HERE you calculate the dmg output and deliver a summary, this may or may not be its own script (im thinking in doing an array using the IDS to call for this info)


	public void endTurnSummary()
	{
		//Here you load the description of your attacks and the enemies using a library. TO BE ADDED 

		// ur text
		textf0 = "You did " + WorldControl.enemyDmgTaken + " damage to its Will and " + WorldControl.enemyLustTaken + " to its lust! \n it has " + WorldControl.enemyHP + 
			" Will left and it has " + WorldControl.enemyLust + "Lust left!";
		// enemy text
		textf0 = textf0 + "The enemy eroded " + WorldControl.enemyDmgInflicted + " of your will to fight and inflicted " + WorldControl.enemyLustInflicted +
		"lust into you! you have " + GameControl.ActualHealth + "will left!" ; 

		multitxt0.text = textf0;
		if(WorldControl.enemyHP <= 0 || WorldControl.enemyLust >= 100 ) 
		{
			combatVictory ();
		}

		if(GameControl.ActualHealth <= 0 || GameControl.ActualLust >= 100)
		{
			combatDefeat();
		}

	}

	//////////
	//ADD LOOT HERE if combat is over, otherwise call combatPhase();
	/// if your inv is full it opens the popup and other box but otherwise it just adds it automatically 
	//////////

	//// END COMBAT PHASE - checks if you won, and how depending on the enemy lust
	/// 

	//case 1 Victory. THESE MAY HAVE TO BE IN A UNIQUE SCRIPT, just because otherwise managing the text thro arrays seems like a pain in the ass 
	public void combatVictory()
	{
		// SHOULD deactivate the actual UI and start a new one who only says Hurrah! and continue to the next phase 
		//Should also add a small text telling you what you got and a description of the defeated enemy, takes it from an array
		random = Random.Range(0,100); 
		Panel1.SetActive(true); 
		if(random > 85)
		{
			WorldControl.dropItem = 1000; // library using ID [enemyID][2]
		}
		else if(random > 60)
		{
			WorldControl.dropItem = 500; // library using ID [enemyID][1]
		}
		else
		{
			WorldControl.dropItem = 100; // library using ID [enemyID][0]
		}
			
		multitxt0.text = "You won! and got " + WorldControl.dropItem  + "!"; 

		addItemscript.addItemScript ();
		Debug.Log ("inventory slot is " + GameControl.invSlotArray [0, 0]);
		if (WorldControl.enemyLust >= 90) {
			Debug.Log ("over 90 lust victory");
		}
		else if(WorldControl.enemyLust >= 50)
		{
			Debug.Log ("over 50 lust victory and < 90");
		}
		else{
			Debug.Log ("under 50 lust victory");
		}



		//canvasCombatUI.enabled = !canvasCombatUI.enabled; 
		//canvasEndCombat.enabled = !canvasEndCombat.enabled;  

		// This canvas should activate also the victory button, WHEN USED it should add item or promt and ask if you want to delete one, afterwards it deactivate 
		// the canvasEndCombat, the original background canvas its in a new scene and has the buttons for the scene. 
		// The enemy has two arrays for its items, one with the values and other with the words
		//it uses ifs to check for the amount of lust of the enemy to initiate it. THIS MAY HAVE TO BE 
		// the victory button SHOULD DEACTIVATE THE CANVAS THAT ITS USING AND ACTIVATE THE VICTORY SCENE ONE, 

	}

	//case 2 defeat 
	public void combatDefeat()
	{
		// its just a plain text using the parser, also it should reset some of your attributes like HP
		//canvasEndCombat.enabled = !canvasEndCombat.enabled; 
		multitxt0.text = "You have been defeated! imagine this is a scene where you get fucked"; 

		//ALSO activates the button for either "Retreat!" or "Surrender", the first ends the turn overall and gets you back, second goes to scene then end. 
	}
	//case 3 submit 

	public void combatSubmit()
	{
		multitxt0.text = "You submited! imagine this is a scene where you get fucked"; 
		// its just a plain text using the parser, it may reset/change some of your attributes 
	}

	// END - Here you call a function to start new turn, or something. Its started either after a scene or hitting "leave" or w/e, should load the main menu scene 

	// lo siguiente solo es para debbuging, borrar

	public void deactCanvas(){
		canvasCombatUI.enabled = !canvasCombatUI.enabled; 
		canvasEndCombat.enabled = !canvasEndCombat.enabled;  
	}


	void Awake(){

		Panel1.SetActive(false); 
	}
}
